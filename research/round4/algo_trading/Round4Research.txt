import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import statsmodels.api as sm
import scipy.stats as stats
import math

prices_2 = pd.read_csv('prices_round_4_day_3.csv', sep=';')
prices_1 = pd.read_csv('prices_round_4_day_2.csv', sep=';')
prices_0 = pd.read_csv('prices_round_4_day_1.csv', sep=';')

trades_2 = pd.read_csv('trades_round_4_day_3_nn.csv', sep=';')
trades_1 = pd.read_csv('trades_round_4_day_2_nn.csv', sep=';')
trades_0 = pd.read_csv('trades_round_4_day_1_nn.csv', sep=';')

df = pd.concat([prices_2, prices_1, prices_0]).reset_index(drop=True)

df.head()

df["product"].unique()

coconut_prices = df[df["product"] == "COCONUT"].reset_index(drop=True)
coupon_prices = df[df["product"] == "COCONUT_COUPON"].reset_index(drop=True)

def calc_vwap(prices_df):
    total_bid_volume = (
        prices_df["bid_volume_1"].fillna(0)
        + prices_df["bid_volume_2"].fillna(0)
        + prices_df["bid_volume_3"].fillna(0)
    )
    total_ask_volume = (
        prices_df["ask_volume_1"].fillna(0)
        + prices_df["ask_volume_2"].fillna(0)
        + prices_df["ask_volume_3"].fillna(0)
    )

    vwap = (
        prices_df["bid_price_1"].fillna(0) * prices_df["bid_volume_1"].fillna(0)
        + prices_df["bid_price_2"].fillna(0) * prices_df["bid_volume_2"].fillna(0)
        + prices_df["bid_price_3"].fillna(0) * prices_df["bid_volume_3"].fillna(0)
        + prices_df["ask_price_1"].fillna(0) * prices_df["ask_volume_1"].fillna(0)
        + prices_df["ask_price_2"].fillna(0) * prices_df["ask_volume_2"].fillna(0)
        + prices_df["ask_price_3"].fillna(0) * prices_df["ask_volume_3"].fillna(0)
    ) / (total_bid_volume + total_ask_volume)

    return vwap

coconut_prices["vwap"] = calc_vwap(coconut_prices)
coupon_prices["vwap"] = calc_vwap(coupon_prices)

cols = ["day", "timestamp", "mid_price", "vwap"]
merge = pd.merge(coconut_prices[cols], coupon_prices[cols], on=['day', 'timestamp'], how='inner', suffixes=('_coconut', '_coupon'))

merge.rename(columns={"mid_price": "mid_price_coconut", "vwap": "vwap_coconut"}, inplace=True)
merge.head()

merge['shifted_coconut_price'] = merge['mid_price_coconut'].shift(-1)
merge = merge.dropna()
merge['unit_increase_coconut'] = merge['mid_price_coconut'] - merge['shifted_coconut_price']
merge['unit_increase_coconut'].describe()

sorted = merge.sort_values(by='unit_increase_coconut', ascending=True)
print(sorted)

plt.plot(merge['unit_increase_coconut'])
plt.title('Unit Increase in Coconut Price Over Time')
plt.xlabel('Time')
plt.ylabel('Unit Increase')
plt.grid(True)
plt.show()

merge = merge[merge['unit_increase_coconut'] > -11]
value_counts = merge['unit_increase_coconut'].value_counts()
value_counts_filtered = value_counts[value_counts.index != -253.0]
print(value_counts_filtered)

# Plot the bar graph
plt.bar(value_counts.index, value_counts.values)
plt.title('Frequency of Unit Increase in Coconut Price (CDF)')
plt.xlabel('Unit Increase')
plt.ylabel('Frequency')
plt.grid(True)
plt.show()

merge['log_price_coconut'] = np.log(merge['mid_price_coconut'])
merge['shifted_log_price_coconut'] = merge['log_price_coconut'].shift(-1)
merge['log_returns_coconut'] = merge['log_price_coconut'] - merge['shifted_log_price_coconut']
merge = merge.dropna()
merge['log_returns_coconut'].describe()

plt.plot(merge['log_returns_coconut'])
plt.title('Unit Increase in Coconut Price Over Time')
plt.xlabel('Time')
plt.ylabel('Unit Increase')
plt.grid(True)
plt.show()
